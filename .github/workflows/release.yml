name: Release

on:
    workflow_dispatch:
        inputs:
            #version:
            #    type: string
            #    description: Full version number to be release (example 0.1.0)
            #    required: true
            #tag:
            #    type: boolean
            #    description: Create a git tag for this release?
            #    default: true
            dry-run:
                description: Dry run the release? Primary use is testing.
                required: false
                default: false
                
#run-name: "Release: ${{ inputs.version }}"

jobs:
    create-release:
        env:
            INTERNAL_REPO_URL: ${{ secrets.INTERNAL_REPO_URL }}
            INTERNAL_REPO_USERNAME: ${{ secrets.INTERNAL_REPO_USERNAME }}
            INTERNAL_REPO_PASSWORD: ${{ secrets.INTERNAL_REPO_PASSWORD }}
            JAVA_VERSION: '17'
        
        runs-on: ubuntu-latest
        permissions:
            contents: write

        steps:
            - name: Checkout Source
              uses: actions/checkout@v4
              with:
                  clean: true
                  fetch-depth: 0
            
            - name: Set up Java
              uses: actions/setup-java@v4
              with:
                  java-version: ${{ env.JAVA_VERSION }}
                  distribution: 'temurin'
                  cache: maven

            - name: Create Maven settings.xml
              run: |
                mkdir -p ~/.m2
                cat > ~/.m2/settings.xml <<EOF
                <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
                    <servers>
                        <server>
                            <id>internal-repo</id>
                            <username>${INTERNAL_REPO_USERNAME}</username>
                            <password>${INTERNAL_REPO_PASSWORD}</password>
                        </server>
                    </servers>
                    <profiles>
                        <profile>
                            <id>internal</id>
                            <activation>
                                <activeByDefault>true</activeByDefault>
                            </activation>
                            <repositories>
                                <repository>
                                    <id>internal-repo</id>
                                    <url>${INTERNAL_REPO_URL}</url>
                                </repository>
                            </repositories>
                            <pluginRepositories>
                                <pluginRepository>
                                    <id>internal-repo</id>
                                    <url>${INTERNAL_REPO_URL}</url>
                                </pluginRepository>
                            </pluginRepositories>
                        </profile>
                    </profiles>
                </settings>
                EOF

            - name: Deploy
              if: ${{ github.event.inputs.dry-run != 'true' }}
              run: mvn clean deploy -s ~/.m2/settings.xml

            - name: Install GitVersion
              uses: gittools/actions/gitversion/setup@v3.2.1
              with:
                versionSpec: '6.3.x'
                preferLatestVersion: true

            - name: Configure GitVersion
              run: |
                cat << 'EOF' > .gitversion.yml
                mode: ContinuousDeployment
                increment: None
                commit-message-incrementing: Enabled
                major-version-bump-message: '^(feat|fix|chore|ci|docs|test)(\(.+\))?\!:.*'
                minor-version-bump-message: '^feat(\(.+\))?:.*'
                patch-version-bump-message: '^(fix|ci)(\(.+\))?:.*'
                branches:
                    main:
                        is-main-branch: true
                        increment: None
                    feature:
                        label: alpha
                        regex: ^(feat(ure)?|(bug)?fix)[\/-](?<BranchName>.+)
                        increment: None
                    release:
                        label: rc
                        regex: ^releases?[\/-](?<BranchName>.+)
                        increment: None
                ignore:
                    sha: []
                merge-message-formats: {}
                EOF
                
            - name: Get Next Version
              id: compute_version
              uses: gittools/actions/gitversion/execute@v3.2.1
              with:
                useConfigFile: true
                configFilePath: .gitversion.yml

            - run: |
                echo "Computed Semantic Version: ${{ steps.compute_version.outputs.semVer }}"

            - name: Does Tag Exist?
              id: check_tag_exists
              run: |
                TAG="v${{ steps.compute_version.outputs.semVer }}"
                if git rev-parse "$TAG" >/dev/null 2>&1; then
                    echo "Tag $TAG already exists. Skipping tagging."
                else
                    echo "should_tag=true" >> $GITHUB_OUTPUT
                fi
            
            - name: Create Semantic Version Tag
              if: steps.check_tag_exists.outputs.should_tag
              id: create_tag
              run: |
                TAG="v${{ steps.compute_version.outputs.semVer }}"
                git tag $TAG
                git push origin $TAG
          
                echo "TAG=$TAG" >> $GITHUB_OUTPUT

            - name: Create Release in GitHub
              if: steps.check_tag_exists.outputs.should_tag
              uses: softprops/action-gh-release@v2
              with:
                tag_name: ${{ steps.create_tag.outputs.TAG }}
                name: "Release ${{ steps.create_tag.outputs.TAG }}"
                body: |
                    ## Release ${{ steps.create_tag.outputs.TAG }}
                draft: false
                prerelease: false
